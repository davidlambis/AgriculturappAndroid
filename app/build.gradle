apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
///apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'



android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.interedes.agriculturappv3"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        //buildConfigField "String", "em", getEm()
        //buildConfigField "String", "ps", getPs()


        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //Design
    //noinspection GradleCompatible
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"

    //crystalrangeseekbar
    implementation 'com.crystal:crystalrangeseekbar:1.1.3'

    //Spinner
    implementation "com.weiwangcn.betterspinner:library-material:$rootProject.ext.library_material_spinner"

    //Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    //annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    //Constrain
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.android.support:support-vector-drawable:27.1.1'

    //Circle Image View
    implementation "de.hdodenhof:circleimageview:$rootProject.ext.circleImageViewVersion"

    //Month Year Picker
    //implementation "com.github.twinkle942910:monthyearpicker:$rootProject.ext.monthYearPickerVersion"

    //EventBus
    implementation "org.greenrobot:eventbus:$rootProject.ext.greenRobotEventBusVersion"

    ///DB FLOW
    /*
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:$rootProject.ext.dbflow_version"*/

    // DBFlow
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow:$rootProject.ext.dbflow_version"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:$rootProject.ext.dbflow_version"

    ///API REST
    implementation "com.google.code.gson:gson:$rootProject.ext.gson"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //Firebase
    //noinspection GradleCompatible
    implementation "com.google.firebase:firebase-auth:$rootProject.ext.firebaseVersion"
    implementation "com.google.firebase:firebase-database:$rootProject.ext.firebaseVersion"
    //implementation "com.google.firebase:firebase-storage:$rootProject.ext.firebaseVersion"
    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.firebaseVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseVersion"
    implementation "com.google.android.gms:play-services-vision:$rootProject.ext.firebaseVersion"



    implementation "com.google.android.gms:play-services:$rootProject.ext.firebaseVersion"
    implementation "com.google.android.gms:play-services-maps:$rootProject.ext.firebaseVersion"
    implementation 'com.google.maps.android:android-maps-utils:0.4+'

    ///Show Progress
    implementation "com.kaopiz:kprogresshud:$kprogresshudVersion"


    implementation 'com.android.support:multidex:1.0.1'

    //DIALOGS
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //Material Expansion Panel
    implementation 'com.robertlevonyan.view:MaterialExpansionPanel:1.2.0'

    //Easy Image
    implementation 'com.github.jkwiecien:EasyImage:1.3.1'

    //CAMARA COMPRESOR
    implementation "id.zelory:compressor:$rootProject.ext.compressedImageVersion"

    //Recycler
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'
    implementation 'com.thoughtbot:expandablecheckrecyclerview:1.4'

    //DateTiemUtils
    implementation 'com.github.thunder413:DateTimeUtils:1.0'

    //Loader Files
    implementation 'com.github.kk121:File-Loader:1.2'

    /*
    //Extenciones Kotlin (QUERYS LIST)
    compile "com.github.vicpinm:krealmextensions:$krealmextensionsVersion"

   //For Single and Flowable queries:
    compile "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroidVerion"*/

    //Anumaciones
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'


    implementation 'com.github.takusemba:spotlight:1.6.1'

    //Picaso
    //implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Boom Menu
    implementation 'com.nightonke:boommenu:1.0.9'

    //Intro
    implementation 'com.github.apl-devs:appintro:v4.2.3'

    //Crash Analitics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'

    //JOB
    implementation 'com.evernote:android-job:1.2.4'

    //REACTIVE
    implementation 'io.reactivex.rxjava2:rxjava:2.0.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    //Glide
    //implementation 'com.github.bumptech.glide:glide:4.7.1'
    // annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    kapt "android.arch.lifecycle:compiler:1.0.0"
    //kapt 'com.github.bumptech.glide:compiler:4.7.1'

    /*
    //Maps MapDrawingTools
    implementation "com.github.bkhezry:MapDrawingTools:$mapDrawingVersion"

    def SupportLibVersion = '27.1.0'
    implementation "com.android.support:appcompat-v7:$SupportLibVersion",
            "com.android.support:design:$SupportLibVersion"
    implementation('com.github.bkhezry:ExtraMapUtils:v1.2.0') {
        exclude group: 'com.android.support'
    }*/

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

/*
*/
kapt {
    generateStubs = true
}
/*
def getEm() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("em")
}

def getPs() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("ps")
}
*/

apply plugin: 'com.google.gms.google-services'
